// Generated by CoffeeScript 1.10.0
(function() {
  var GameState, Phaser, SpaceShip, game, size_x, size_y;

  Phaser = window.Phaser;

  size_x = window.innerWidth;

  size_y = window.innerHeight;

  SpaceShip = (function() {
    function SpaceShip() {
      this.x = size_x / 2;
      this.y = size_y / 2;
      this.angle = 0;
      this.speed = 0;
      this.graphics = game.add.graphics(this.x, this.y);
      this.graphics.lineStyle(0);
      this.graphics.beginFill(0xFF0000);
      this.graphics.drawPolygon([0, -20, 15, 10, 15, 20, -15, 20, -15, 10]);
      this.graphics.endFill();
    }

    SpaceShip.prototype.update = function() {
      var dx, dy;
      dx = Math.sin(Math.PI * 2 * this.angle / 360) * this.speed;
      dy = -Math.cos(Math.PI * 2 * this.angle / 360) * this.speed;
      this.graphics.x += dx;
      this.graphics.y += dy;
      return this.graphics.angle = this.angle;
    };

    SpaceShip.prototype.speed_up = function(dt) {
      this.speed += dt * 10.0;
      if (this.speed > 10.0) {
        return this.speed = 10.0;
      }
    };

    SpaceShip.prototype.speed_down = function(dt) {
      this.speed -= dt * 10.0;
      if (this.speed < -10.0) {
        return this.speed = -10.0;
      }
    };

    SpaceShip.prototype.turn = function(dir, dt) {
      return this.angle += dir * dt * 100.0;
    };

    return SpaceShip;

  })();

  GameState = (function() {
    function GameState() {
      null;
    }

    GameState.prototype.update = function() {
      var dt;
      dt = this.game.time.elapsed / 1000.0;
      if (game.input.keyboard.isDown(Phaser.KeyCode.UP)) {
        this.space_ship.speed_up(dt);
      }
      if (game.input.keyboard.isDown(Phaser.KeyCode.DOWN)) {
        this.space_ship.speed_down(dt);
      }
      if (game.input.keyboard.isDown(Phaser.KeyCode.LEFT)) {
        this.space_ship.turn(-1.0, dt);
      }
      if (game.input.keyboard.isDown(Phaser.KeyCode.RIGHT)) {
        this.space_ship.turn(1.0, dt);
      }
      return this.space_ship.update(dt);
    };

    GameState.prototype.create = function() {
      this.game.stage.backgroundColor = "88F";
      return this.space_ship = new SpaceShip;
    };

    return GameState;

  })();

  game = new Phaser.Game(size_x, size_y);

  game.state.add("Game", GameState, true);

}).call(this);
