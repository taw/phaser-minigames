// Generated by CoffeeScript 1.10.0
(function() {
  var GameState, Phaser, Shape, game, randint, random_color, size_x, size_y;

  Phaser = window.Phaser;

  size_x = window.innerWidth;

  size_y = window.innerHeight;

  randint = function(a, b) {
    return a + Math.floor(Math.random() * (b - a));
  };

  random_color = function() {
    return Math.random() * 0xFFFFFF;
  };

  GameState = (function() {
    function GameState() {
      this.shapes = [];
      this.shape_timer = 0;
    }

    GameState.prototype.update = function() {
      var dt, i, len, ref, results, s;
      dt = this.game.time.elapsed / 1000.0;
      this.shape_timer += dt;
      if (this.shape_timer > 0.1 || this.shapes.length < 50) {
        if (this.shapes.length >= 100) {
          s = this.shapes.shift();
          s.destroy();
        }
        this.shapes.push(new Shape);
        this.shape_timer = 0;
      }
      ref = this.shapes;
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        s = ref[i];
        results.push(s.update(dt));
      }
      return results;
    };

    GameState.prototype.create = function() {
      return this.game.stage.backgroundColor = "040";
    };

    return GameState;

  })();

  Shape = (function() {
    function Shape() {
      this.active = true;
      this.x = randint(0, size_x);
      this.y = randint(0, size_y);
      this.graphics = game.add.graphics(this.x, this.y);
      this.graphics.lineStyle(0);
      this.graphics.beginFill(random_color());
      this.graphics.drawCircle(0, 0, randint(5, 100));
      this.graphics.endFill();
    }

    Shape.prototype.update = function(dt) {
      return null;
    };

    Shape.prototype.destroy = function() {
      console.log(this.graphics);
      return this.graphics.destroy();
    };

    return Shape;

  })();

  game = new Phaser.Game(size_x, size_y);

  game.state.add("Game", GameState, true);

}).call(this);
