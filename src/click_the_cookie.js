// Generated by CoffeeScript 1.10.0
(function() {
  var GameState, Phaser, game, randint, size_x, size_y;

  Phaser = window.Phaser;

  size_x = window.innerWidth;

  size_y = window.innerHeight;

  randint = function(a, b) {
    return a + Math.floor(Math.random() * (b - a + 1));
  };

  GameState = (function() {
    function GameState() {
      null;
    }

    GameState.prototype.preload = function() {
      return this.game.load.image('cookie', '/images/cookie.png');
    };

    GameState.prototype.update = function() {
      var dt;
      dt = this.game.time.elapsed / 1000.0;
      if (this.cookie.x < 0 || this.cookie.x >= size_x - 120) {
        this.dx = -this.dx;
      }
      if (this.cookie.y < 0 || this.cookie.y >= size_y - 120) {
        this.dy = -this.dy;
      }
      this.cookie.x += this.dx * dt;
      this.cookie.y += this.dy * dt;
      return this.scoreText.text = "Score: " + this.score;
    };

    GameState.prototype.create = function() {
      var angle, speed;
      this.score = 0;
      this.scoreText = game.add.text(16, 16, '', {
        fontSize: '32px',
        fill: '#fff'
      });
      this.game.stage.backgroundColor = "F8F";
      this.cookie = this.game.add.sprite(randint(0, size_x - 120), randint(0, size_y - 120), 'cookie');
      angle = Math.random() * 2 * Math.PI;
      speed = 200.0;
      this.dx = Math.cos(angle) * speed;
      this.dy = Math.sin(angle) * speed;
      return this.game.input.onTap.add((function(_this) {
        return function() {
          return _this.click(_this.game.input.activePointer.worldX, _this.game.input.activePointer.worldY);
        };
      })(this));
    };

    GameState.prototype.click = function(x, y) {
      if (x < this.cookie.x || x >= this.cookie.x + 120) {
        return;
      }
      if (y < this.cookie.y || y >= this.cookie.y + 120) {
        return;
      }
      return this.score += 1;
    };

    return GameState;

  })();

  game = new Phaser.Game(size_x, size_y);

  game.state.add("Game", GameState, true);

}).call(this);
